{"version":3,"sources":["components/card-lists/card-lists.component.js","App.js","reportWebVitals.js","index.js"],"names":["CardList","props","className","children","App","state","monsters","fetch","then","response","json","user","setState","this","map","monster","name","id","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAIaA,EAAW,SAACC,GACrB,OACI,qBAAKC,UAAU,aAAf,SAA6BD,EAAME,YC0B5BC,G,wDAzBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,IAHA,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEN,SAAUK,S,oBAG5C,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,UACGW,KAAKR,MAAMC,SAASQ,KAAI,SAACC,GAAD,OAAa,6BAAsBA,EAAQC,MAArBD,EAAQE,e,GAlB/CC,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1342c1aa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) =>{\r\n    return(\r\n        <div className='.card-list'>{props.children}</div>\r\n    )\r\n}","import React from 'react';\n\nimport { CardList } from './components/card-lists/card-lists.component'\n\nimport './App.css'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(user => this.setState({ monsters: user }))\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <CardList>\n          {this.state.monsters.map((monster) => <h1 key={monster.id}>{monster.name}</h1>)}\n        </CardList>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}